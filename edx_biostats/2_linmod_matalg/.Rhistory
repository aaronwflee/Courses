midd$major[midd$major %in% c("Intl Pol & Ec", "Intl Stdies Politics/Economics")] <- "Int'l Politics and Economics"
midd$major[startsWith(midd$major, "Envir") | startsWith(midd$major, "ES")] <- "Environmental Studies"
midd$major[midd$major == "Classical Studies"] <- "Classics"
midd$major[midd$major %in% c("E Asian Sty", "East Asian Studies/China", "East Asian Studies/Japan") ] <- "East Asian Studies"
midd$major[midd$major %in% c("Hist of Art & Arch/Arch Study", "Hist of Art & Arch/Hist of Art") ] <- "History of Art & Architecture"
midd$major[midd$major == "Math/Com Sc"] <- "Mathematics"
midd$major[midd$major == "Minor: German"] <- "German"
midd$major[midd$major == "Art"] <- "Studio Art"
midd$major[midd$major == "Women's Sty"  ] <- "Women's & Gender Studies"
midd$major[midd$major == "American Literature"] <- "English & American Literatures"
midd <- subset(midd, major!="Gen Ja/Ru")
midd <- subset(midd, major != "North Sty")
midd <- subset(midd, major!="No Major")
midd <- subset(midd, major!="")
midd$major <- as.factor(midd$major)
#get the 15 most common majors
sort(table(midd$major), decreasing=TRUE)
cmn_majors <- names(sort(summary(midd$major), decreasing=T)[1:12])
#create binary variable for whether or not major is a common major
midd$cmn_major <- "Rest"
midd$cmn_major[midd$major %in% cmn_majors]<- "Common"
q <- qplot(midd$major, fill = midd$major_type)
q + xlab("Middlebury Majors") + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position="top", legend.title = element_blank())
write.csv(midd, "/Users/aaronwflee/Desktop/2017_Middlebury_Detailed_April6.csv")
str(midd$major)
levels(midd$major)
cmn_majors
midd$jl_act_12 <- as.factor(paste(midd$jl_act1, midd$jl_act2, sep = "."))
midd$jl_func <- as.factor(paste(midd$jl_act_12, midd$jl_res1, sep = " "))
table(midd$jl_act_12)
table(midd$jl_func)
qplot(midd$jl_func, fill = midd$jl_res)
qplot(midd$jl_func, fill = midd$jl_res1)
qplot(midd$jl_act12, fill = midd$jl_res1)
qplot(midd$jl_act12)
qplot(midd$jl_act12)
qplot(midd$jl_act_12, fill = midd$jl_res1)
dat <- read.csv("/Users/aaronwflee/Downloads/frey_osborne.csv")
View(dat)
dat <- read.csv("/Users/aaronwflee/Dropbox (Locus Analytics)/alee/SOCbyNAICS/year/year_2022.csv", header=T)
str(dat)
dat1 <- subset(dat, naics == 337214)
dat1 <- subset(dat, jl_act_s == "2.1")
qplot(dat1$soc, dat1$count)
library(ggplot2)
qplot(dat1$soc, dat1$count)
dat$naics <- factor(dat$naics)
str(dat)
clear(dat1)
rm(dat1)
library(dplyr)
df <- dat %>% group_by(jl_s, el_s)
df <- dat %>% group_by(jl_s, el_s) %>% summarise_each(funs(sum), count)
View(df)
df_22 <- subset(dat, jl_s == "2.2")
View(df_22)
dat04 <- read.csv("/Users/aaronwflee/Dropbox (Locus Analytics)/alee/SOCbyNAICS/year/year_2004.csv", header=T)
df_04_22 <- subset(dat04, jl_s == "2.2")
View(df_04_22)
dat13 <- read.csv("/Users/aaronwflee/Dropbox (Locus Analytics)/alee/SOCbyNAICS/year/year_2013.csv", header=T)
df_13_22 <- subset(dat04, jl_s == "2.2")
View(df_04_22)
df_21a <- subset(dat04, jl_s == "2.1 A")
View(df_21a)
msa <- read.csv("/Users/aaronwflee/Dropbox (Locus Analytics)/alee/SOCbyNAICS/msa/msa_13460.csv", header=T)
msa_22 <- subset(msa, jl_s == "2.2")
View(msa_22)
dat <- read.csv("/Users/aaronwflee/Dropbox (Locus Analytics)/alee/SOCbyNAICS/year/year_2022.csv", header=T)
dat_22 <- subset(dat, jl_s == "2.2")
View(dat_22)
View(df_22)
year <- read.csv("/Users/aaronwflee/Dropbox (Locus Analytics)/alee/SOCbyNAICS/year/year_2022.csv", header=T)
year_22 <- subset(year, jl_s == "2.2")
View(year_22)
year_22 <- subset(year, jl_s == "")
View(year_22)
year_22 <- subset(year, el_s == "")
View(year_22)
year_df <- year %>% group_by(jl_s, el_s) %>% summarise_each(funs(sum), count)
View(year_df)
msa <- subset(msa, jl_s != "")
msa <- subset(msa, el_s != "")
msa_df <- year %>% group_by(jl_s, el_s) %>% summarise_each(funs(sum), count)
View(msa_df)
msa_df <- msa %>% group_by(jl_s, el_s) %>% summarise_each(funs(sum), count)
View(msa_df)
msa_21c <- subset(msa, jl_s == "2.1 C")
View(msa_21c)
msa_df$central <- 0
msa_df$central[msa_df$jl_s == msa_df$el_s] <- 1
View(msa_df)
str(msa_df)
msa_df <- msa %>% group_by(jl_s, el_s) %>% summarise_each(funs(sum), count)
str(msa_df)
msa_df$central <- 0
msa_df$central[msa_df$jl_s == msa_df$el_s] <- 1
msa_df$jl_s <- as.character(msa_df$jl_s)
msa_df$el_s <- as.character(msa_df$el_s)
msa_df$central <- 0
msa_df$central[msa_df$jl_s == msa_df$el_s] <- 1
msa_df$central
table(msa_df$central)
table(msa_df$central, msa_df$count)
table(msa_df$central~ msa_df$count)
table(msa_df$count~msa_df$central)
qplot(msa_df$count, msa_df$central)
anova(msa_df$central, msa_df$count)
anova(count ~ central, data = msa_df)
fit <- anova(count ~ central, data = msa_df)
fit <- anova(lm(count ~ central, data = msa_df))
View(fit)
summary(fit)
mean(msa_df$count~msa_df$central)
msa_df$central <- factor(msa_df$central)
qplot(msa_df$count, msa_df$central)
mean(msa_df$count~msa_df$central)
aggregate(count~central, msa_df, mean)
aggregate(count~central, msa_df, sd)
print(fit)
plot(msa_df$count, msa_df$central)
plot(msa_df$central, msa_df$count)
qplot(msa_df$central, msa_df$count)
qplot(aggregate(count~central, msa_df, mean))
aggregate(count~central, msa_df, mean)
mtable <- aggregate(count~central, msa_df, mean)
View(mtable)
str(mtable)
qplot(mtable$count, mtable$central)
barplot(mtable$central, mtable$count)
plot(mtable$central, mtable$count)
plot(msa_df$central, msa_df$count)
qplot(msa_df$central, msa_df$count)
qplot(central, count, data=msa_df, geom="bar")
qplot(central, count, data=msa_df, geom="point")
qplot(central, count, data=msa_df, geom="", fill="count")
qplot(central, count, data=msa_df, geom="point", fill=count)
qplot(central, count, data=msa_df, geom="point", fill=jl_s)
ggplot(central, count, data=msa_df) + geom_boxplot()
str(msa)
table(msa$jl_act)
mtable <- aggregate(count~el_res1, lawyers, mean)
lawyers <- subset(msa, jl_act="4.2.3")
mtable <- aggregate(count~el_res1, lawyers, mean)
aggregate(count~el_res1, lawyers, mean)
aggregate(count~el_res, lawyers, mean)
aggregate(count~el_res1, lawyers, sum)
mtable <- aggregate(count~central, msa_df, sum)
mtable
msa <- read.csv("/Users/aaronwflee/Dropbox (Locus Analytics)/alee/SOCbyNAICS/msa/msa_13460.csv", header=T)
msa <- subset(msa, jl_act == "1")
View(msa)
year <- subset(year, jl_act == "1")
View(year)
year <- read.csv("/Users/aaronwflee/Dropbox (Locus Analytics)/alee/SOCbyNAICS/year/year_2022.csv", header=T)
msa <- read.csv("/Users/aaronwflee/Dropbox (Locus Analytics)/alee/SOCbyNAICS/year/year_2022.csv", header=T)
msa$naics <- factor(msa$naics)
## remove rows with no SOC2L or N2L match
msa <- subset(msa, jl_s != "")
msa <- subset(msa, el_s != "")
msa_df <- msa %>% group_by(jl_s, el_s) %>% summarise_each(funs(sum), count)
library(dplyr)
msa_df <- msa %>% group_by(jl_s, el_s) %>% summarise_each(funs(sum), count)
msa_df$jl_s <- as.character(msa_df$jl_s)
msa_df$el_s <- as.character(msa_df$el_s)
##
msa_df$central <- 0
msa_df$central[msa_df$jl_s == msa_df$el_s] <- 1
msa_df$central <- factor(msa_df$central)
qplot(msa_df$count, msa_df$central)
plot(msa_df$count, msa_df$central)
plot(msa_df$central, msa_df$count)
fit <- anova(lm(count ~ central, data = msa_df))
print(fit)
aggregate(count~central, msa_df, mean)
aggregate(count~central, msa_df, count)
aggregate(count~central, msa_df, mean)
aggregate(count~central, msa_df, sd)
aggregate(count~central, msa_df, mean)
aggregate(count~central, msa_df, sum)
table(msa_df$central)
table(msa_df$central)[1]
table(msa_df$central)[2]
table(msa_df$central)
table(msa_df$central)[1]/(72*71) #non central
table(msa_df$central)[2]/(72*1) #central function
install.packages(rafalib)
install.packages("rafalib")
install.packages("swirl")
v <- list(2.23, 3.45, 1.87, 2.11, 7.33, 18.34, 19.23)
v <- c(2.23, 3.45, 1.87, 2.11, 7.33, 18.34, 19.23)
mean(v)
version
val = 0
for (i in range(25)) {
val <- val + i**2
}
print(val)
print(val/25)
val = 0
for (i in range(26)) {
val <- val + i**2
}
print(val)
print(val/25)
class(cars)
length(cars)
str(cars)
mean(cars[,2])
which(cars[,2]==85)
val = 0
for (i in range(25)) {
val <- val + i**2
print(val)
}
range(25)
range(1,25)
for (i in 1:25) {
val <- val + i**2
print(val)
}
print(val/25)
1:26
for (i in 1:25) {
val <- val + i**2
print(val)
}
print(val)
sum <- 0
for(i in 1:25)
sum <- sum + i^2
sum
sum <- 0
for(i in 1:25)
sum <- sum + i**2
sum
val = 0
for (i in 1:25) {
val <- val + i**2
print(val)
}
print(val)
version()
version
version
version
set.seed(1)
N <- 1000
B <- 10000
tstats <- replicate(B,{
X <- sample(c(-1,1), N, replace=TRUE)
sqrt(N)*mean(X)/sd(X)
})
ps=seq(1/(B+1), 1-1/(B+1), len=B)
qqplot(qt(ps,N-1), tstats, xlim=range(tstats))
abline(0,1)
RStudio.Version()
r
version
set.seed(1)
N <- 15
B <- 10000
tstats <- replicate(B,{
X <- sample(c(-1,1), N, replace=TRUE)
sqrt(N)*mean(X)/sd(X)
})
ps=seq(1/(B+1), 1-1/(B+1), len=B)
qqplot(qt(ps,N-1), tstats, xlim=range(tstats))
abline(0,1)
library(UsingR)
install.packages("UsingR")
library(downloader)
library(rafalib)
load("~/Documents/biostats_courses/1_data_analysis/skew.RData")
dim(dat)
par(mfrow=c(3,3))
dat[1]
dat[0,1]
length(dat[0,1])
length(dat[1,1])
length(dat[,1])
length(dat[1,])
for (i in 1:9) {
qqnorm(dat[,i])
qqline()
}
length(dat[,1])
for (i in 1:9) {
qqnorm(dat[,i])
}
## set up plotting environment to do 3X3 plots
par(mfrow=c(3,3))
for (i in 1:9) {
qqnorm(dat[,i])
}
head(InsectSprays)
summary(InsectSprays)
str(InsectSprays)
table(InsectSprays$spray)
boxplot(split(InsectSprays$count, InsectSprays$spray))
par(mfrow=c(1,1))
boxplot(split(InsectSprays$count, InsectSprays$spray))
boxplot(InsectSprays$count~InsectSprays$spray)
data(nym.2002, package="UsingR")
str(nym.2002)
boxplot(nym.2002$time~nym.2002$gender)
par(mfrow(1,2))
hist(filter(nym.2002, gender =='Male')$time)
filter(nym.2002, gender =='Male')$time
filter(nym.2002, nym.2002$gender =='Male')$time
library(dplyr)
hist(filter(nym.2002, gender =='Male')$time)
par(mfrow(1,2))
hist(filter(nym.2002, gender =='Male')$time)
hist(filter(nym.2002, gender =='Female')$time)
par(mfrow(2,1))
par(mfrow=2,1)
hist(filter(nym.2002, gender =='Male')$time)
hist(filter(nym.2002, gender =='Female')$time)
par(mfrow=c(2,1))
hist(filter(nym.2002, gender =='Male')$time)
hist(filter(nym.2002, gender =='Female')$time)
par(mfrow=c(1,2))
hist(filter(nym.2002, gender =='Male')$time)
hist(filter(nym.2002, gender =='Female')$time)
boxplot(nym.2002$time~nym.2002$gender)
par(mfrow=c(1,1))
boxplot(nym.2002$time~nym.2002$gender)
mean(split(nym.2002$time, nym.2002$gender))
mean(filter(nym.2002, gender =='Male')$time)
mean(filter(nym.2002, gender =='Female')$time)
X = cbind(rep(1,nx + ny),rep(c(0,1),c(nx, ny)))
nx=5
ny=7
X = cbind(rep(1,nx + ny),rep(c(0,1),c(nx, ny)))
View(X)
t(X) %*% X
(t(X) %*% X)
(solve(t(X) %*% X))
spider <- read.csv(filename, skip=1)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/spider_wolff_gorb_2013.csv"
filename <- "spider_wolff_gorb_2013.csv"
library(downloader)
if (!file.exists(filename)) download(url, filename)
spider <- read.csv(filename, skip=1)
spider
str(spider)
fit <- lm(friction ~ type + leg, data = spider)
summary(fit)
coef(fit)
coef(fit)[4]-coef(fit)[2]
stderr(fit)
0.03438 - 0.04569
0.9394992/0.01131
(coef(fit)[5]-coef(fit)[3])/0.01131
L4vsL2 <- contrast(fit,list(leg="L4",type="pull"),list(leg="L2",type="pull"))
library(contrast)
install.packages("contrast")
L4vsL2 <- contrast(fit,list(leg="L4",type="pull"),list(leg="L2",type="pull"))
library(contrast)
L4vsL2 <- contrast(fit,list(leg="L4",type="pull"),list(leg="L2",type="pull"))
L4vsL2
L4vsL2$X
X <- model.matrix(~ type + leg, data=spider)
(Sigma <- sum(fitTL$residuals^2)/(nrow(X) - ncol(X)) * solve(t(X) %*% X))
C <- matrix(c(0,0,-1,0,1),1,5)
(Sigma <- sum(fit$residuals^2)/(nrow(X) - ncol(X)) * solve(t(X) %*% X))
X <- model.matrix(~ type + leg, data=spider)
(Sigma <- sum(fit$residuals^2)/(nrow(X) - ncol(X)) * solve(t(X) %*% X))
C <- matrix(c(0,0,-1,0,1),1,5)
sqrt(C %*% Sigma %*% t(C))
sqrt(Var(beta-hat_L4 - beta-hat_L2))
sqrt(Var(coef(fit)[5] - coef(fit)[3]))
sqrt(var(coef(fit)[5] - coef(fit)[3]))
sqrt(var(coef(fit)[5] - coef(fit)[3]))
coef(fit)[5] - coef(fit)[3]
sqrt(var(0.1094167))
sqrt(var(0.1094167))
var(0.1094167)
C
X
X %*% C
C %*% X
t(X) %*% C
solve(t(X) %*% C)
solve(t(X)) %*% C
solve(t(X) %*% C)
solve(t(X)) %*% C
solve(t(C)) %*% X
L4vsL2
L4vsL2$X %*% coefs(fit)
L4vsL2$X %*% coef(fit)
sqrt(C %*% Sigma %*% t(C))
sqrt(C %*% Sigma %*% t(C))
sqrt(X %*% Sigma %*% t(X))
sqrt(C %*% Sigma %*% t(C))
sqrt(C %*% Sigma %*% t(C))
C %*% Sigma %*% t(C)
L4vsL2$X
L4vsL2
summary(fit)
sqrt(C %*% Sigma %*% t(C))
str(fit)
sqrt(C %*% Sigma %*% t(C)) - 0.04569 - 0.03438
Sigma[3,5]
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/spider_wolff_gorb_2013.csv"
filename <- "spider_wolff_gorb_2013.csv"
library(downloader)
if (!file.exists(filename)) download(url, filename)
spider <- read.csv(filename, skip=1)
spider$log2friction <- log2(spider$friction)
boxplot(log2friction ~ type*leg, data=spider)
fit2 <- lm(log2friction ~ type + leg, data=spider)
summary(fit)
contrast(fit2, list(leg="L4",type="pull"),list(leg="L2",type="pull"))
fit2 <- lm(log2friction ~ type*leg, data=spider)
summary(fit2)
fit2a <- anova(log2friction~type*leg, data=spider)
fit2a <- aov(log2friction~type*leg, data=spider)
summary(fit2a)
coef(fit2a)[3]
coef(fit2a)[3] + coef(fit2a)[6]
## 4 groups of 10 samples
N <- 40
p <- 4
group <- factor(rep(1:p,each=N/p))
X <- model.matrix(~ group)
Y <- rnorm(N,mean=42,7)
mu0 <- mean(Y)
initial.ss <- sum((Y-mu0)^2)
s <- split(Y, group)
after.group.ss <- sum(sapply(s, function(x) sum((x - mean(x))^2)))
(group.ss <- initial.ss - after.group.ss)
group.ms <- group.ss / (p - 1)
after.group.ms <- after.group.ss / (N - p)
f.value <- group.ms / after.group.ms
set.seed(1)
F <- c()
for (i in seq(1000)) {
Y <- rnorm(N,mean=42,7)
mu0 <- mean(Y)
initial.ss <- sum((Y-mu0)^2)
s <- split(Y, group)
after.group.ss <- sum(sapply(s, function(x) sum((x - mean(x))^2)))
(group.ss <- initial.ss - after.group.ss)
group.ms <- group.ss / (p - 1)
after.group.ms <- after.group.ss / (N - p)
f.value <- group.ms / after.group.ms
F <- c(F, f.value)
}
mean(F)
hist(F, col="grey", border="white", breaks=50, freq=FALSE)
xs <- seq(from=0,to=6,length=100)
lines(xs, df(xs, df1 = p - 1, df2 = N - p), col="red")
setwd("/Users/aaronwflee/Documents/Github/biostats_courses/2_linmod_matalg/")
sex <- factor(rep(c("female","male"),each=4))
trt <- factor(c("A","A","B","B","C","C","D","D"))
X <- model.matrix( ~ sex + trt)
X
qr(X)$rank
Y <- 1:8
sum(((Y - X_male* beta_male - X_D beta_D) - X_R beta_R)^2)
sum(((Y - X$sexmale* beta_male - X_D beta_D) - X_R beta_R)^2)
makeYstar <- function(a,b) Y - X[,2] * a - X[,5] * b
fitTheRest <- function(a,b) {
Ystar <- makeYstar(a,b)
Xrest <- X[,-c(2,5)]
betarest <- solve(t(Xrest) %*% Xrest) %*% t(Xrest) %*% Ystar
residuals <- Ystar - Xrest %*% betarest
sum(residuals^2)
}
fitTheRest()
fitTheRest(1,2)
makeYstar(1,2)
expand.grid(1:3,1:3)
betas = expand.grid(-2:8,-2:8)
rss = apply(betas,1,function(x) fitTheRest(x[1],x[2]))
rss
betas
min(rss)
rss = apply(betas,1,function(x) fitTheRest(x[1],x[2]))
rss
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/spider_wolff_gorb_2013.csv"
filename <- "spider_wolff_gorb_2013.csv"
library(downloader)
if (!file.exists(filename)) download(url, filename)
spider <- read.csv(filename, skip=1)
fit <- lm(friction ~ type + leg, data=spider)
betahat <- coef(fit)
Y <- matrix(spider$friction, ncol=1)
X <- model.matrix(~ type + leg, data=spider)
qr.Q(X)
qr.Q(qr(X))
X
Y
betahat/Y
betahat%/%Y
betahat%*%(Y)^-1
QR <- qr(X)
(betahat <- solve.qr(QR, y))
(betahat <- solve.qr(QR, Y))
qr.Q(QR)
(betahat <- solve.qr(QR, Y))
fit
Q <- qr.Q( QR )
Q
Q[1,1]
R <- qr.R( QR )
R[1,1,]
R[1,1]
(betahat <- backsolve(R, crossprod(Q,y) ) )
(betahat <- backsolve(R, crossprod(Q,Y) ) )
crossprod(Q,Y)
