year <- read.csv("/Users/aaronwflee/Dropbox (Locus Analytics)/alee/SOCbyNAICS/year/year_2022.csv", header=T)
msa <- read.csv("/Users/aaronwflee/Dropbox (Locus Analytics)/alee/SOCbyNAICS/year/year_2022.csv", header=T)
msa$naics <- factor(msa$naics)
## remove rows with no SOC2L or N2L match
msa <- subset(msa, jl_s != "")
msa <- subset(msa, el_s != "")
msa_df <- msa %>% group_by(jl_s, el_s) %>% summarise_each(funs(sum), count)
library(dplyr)
msa_df <- msa %>% group_by(jl_s, el_s) %>% summarise_each(funs(sum), count)
msa_df$jl_s <- as.character(msa_df$jl_s)
msa_df$el_s <- as.character(msa_df$el_s)
##
msa_df$central <- 0
msa_df$central[msa_df$jl_s == msa_df$el_s] <- 1
msa_df$central <- factor(msa_df$central)
qplot(msa_df$count, msa_df$central)
plot(msa_df$count, msa_df$central)
plot(msa_df$central, msa_df$count)
fit <- anova(lm(count ~ central, data = msa_df))
print(fit)
aggregate(count~central, msa_df, mean)
aggregate(count~central, msa_df, count)
aggregate(count~central, msa_df, mean)
aggregate(count~central, msa_df, sd)
aggregate(count~central, msa_df, mean)
aggregate(count~central, msa_df, sum)
table(msa_df$central)
table(msa_df$central)[1]
table(msa_df$central)[2]
table(msa_df$central)
table(msa_df$central)[1]/(72*71) #non central
table(msa_df$central)[2]/(72*1) #central function
install.packages(rafalib)
install.packages("rafalib")
install.packages("swirl")
v <- list(2.23, 3.45, 1.87, 2.11, 7.33, 18.34, 19.23)
v <- c(2.23, 3.45, 1.87, 2.11, 7.33, 18.34, 19.23)
mean(v)
version
val = 0
for (i in range(25)) {
val <- val + i**2
}
print(val)
print(val/25)
val = 0
for (i in range(26)) {
val <- val + i**2
}
print(val)
print(val/25)
class(cars)
length(cars)
str(cars)
mean(cars[,2])
which(cars[,2]==85)
val = 0
for (i in range(25)) {
val <- val + i**2
print(val)
}
range(25)
range(1,25)
for (i in 1:25) {
val <- val + i**2
print(val)
}
print(val/25)
1:26
for (i in 1:25) {
val <- val + i**2
print(val)
}
print(val)
sum <- 0
for(i in 1:25)
sum <- sum + i^2
sum
sum <- 0
for(i in 1:25)
sum <- sum + i**2
sum
val = 0
for (i in 1:25) {
val <- val + i**2
print(val)
}
print(val)
version()
version
version
version
library(dplyr)
library(downloader)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/babies.txt"
filename <- basename(url)
download(url, destfile=filename)
babies <- read.table("babies.txt", header=TRUE)
babies.head()
head(babies)
summary(babies)
bwt.nonsmoke <- filter(babies, smoke == 0) %>% select(bwt) %>% unlist
bwt.smoke <- filter(babies, smoke == 1) %>% select(bwt) %>% unlist
mean(bwt.nonsmoke) - mean(bwt.smoke)
popsd(bwt.nonsmoke)
popsd(bwt.smoke)
library(rafalib)
popsd(bwt.nonsmoke)
popsd(bwt.smoke)
set.seed(1)
dat.ns <- sample(bwt.nonsmoke, 25)
dat.s <- sample(bwt.smoke, 25)
tstat <- (mean(dat.ns) - mean(dat.s))/sqrt(sd(dat.ns) - sd(dat.s))
tstat
se = sqrt( var(dat.ns)/25 + var(dat.s)/12 )
tstat <- (mean(dat.ns) - mean(dat.s))/se
tstat
set.seed(1)
dat.ns <- sample(bwt.nonsmoke, 25)
dat.s <- sample(bwt.smoke, 25)
se = sqrt( var(dat.ns)/25 + var(dat.s)/12 )
tstat <- (mean(dat.ns) - mean(dat.s))/se
t.test(dat.ns, dat.s)
N=25
set.seed(1)
dat.ns <- sample(bwt.nonsmoke , N)
dat.s <- sample(bwt.smoke , N)
X.ns <- mean(dat.ns)
sd.ns <- sd(dat.ns)
X.s <- mean(dat.s)
sd.s <- sd(dat.s)
sd.diff <- sqrt(sd.ns^2/N+sd.s^2/N)
tval <- (X.s - X.ns)/sd.diff
tval
sd(dat.ns)
sd(dat.ns)^2
var(dat.ns)
se = sqrt( sd(dat.ns)^2/25 + sd(dat.s)^2/12 )
tstat <- (mean(dat.ns) - mean(dat.s))/se
se = sqrt( sd(dat.ns)^2/25 + sd(dat.s)^2/12 )
tstat <- (mean(dat.ns) - mean(dat.s))/se
sd(dat.ns)^2/25
sd.ns^2/N
var(dat.ns)/25
var(dat.s)/1
sqrt(sd.ns^2/N+sd.s^2/N)
sqrt(var(dat.ns)/25 + var(dat.s)/12 )
sqrt(var(dat.ns)/25+var(dat.s)/25)
se = sqrt(var(dat.ns)/25+var(dat.s)/25)
tstat <- (mean(dat.ns) - mean(dat.s))/se
pnorm(tstat)
1-0.9830351
1-pnorm(tstat)
1-pnorm(abs(tstat))-pnorm(-abs(tstat))
pnorm(abs(tstat))
pnorm(-abs(tstat))
1-pnorm(abs(tstat))-pnorm(-abs(tstat))
pnorm(abs(tstat))-pnorm(-abs(tstat))
(1-pnorm(abs(tstat)) + pnorm(-abs(tstat))
1-pnorm(abs(tstat)) + pnorm(-abs(tstat))
1-pnorm(abs(tstat)) + pnorm(-abs(tstat))
1 - pnorm(-abs(tstat)) - pnorm(abs(tstat))
1 - pnorm(-abs(tstat)) - pnorm(abs(tstat))
1-pnorm(abs(tstat)) + pnorm(-abs(tstat))
1-pnorm(abs(tstat)) + pnorm(-abs(tstat))
1-pnorm(abs(tstat)) + pnorm(-abs(tstat))
1-(pnorm(abs(tval))-pnorm(-abs(tval)))
pnorm(-abs(tstat))
pnorm(-abs(tval))
pnorm(abs(tstat))
pnorm(abs(tval))
1-(pnorm(abs(tval))-pnorm(-abs(tval)))
1-2*pnorm(-abs(tval))
1-2*pnorm(-abs(tval))
2*pnorm(-abs(tval))
se
pnorm(.99)
dnorm(.99)
dnorm(.5)
dnorm(0)
se
2.58*se
Q <- qnorm(1- 0.05/2)
Q <- qnorm(1- 0.01/2)
interval <- c(mean(chow)-Q*se, mean(chow)+Q*se )
Q*se
qt(c(.005, .995), df=23)
qt(c(.005, .995), df=23)[1]
(qt(c(.005, .995), df=23)[2] + qt(c(.005, .995), df=23)[1])/2
(qt(c(.005, .995), df=23)[2] - qt(c(.005, .995), df=23)[1])/2
qt(c(.005, .995), df=46)
set.seed(1)
dat.ns <- sample(bwt.nonsmoke, 25)
dat.s <- sample(bwt.smoke, 25)
qt(c(.005, .995), df=46)[2]
T <- qt(c(.005, .995), df=46)[2]
T*se
set.seed(1)
sdat.ns <- sample(bwt.nonsmoke, 5)
sdat.s <- sample(bwt.smoke, 5)
t.test(sdat.s, sdat.ns)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/babies.txt"
filename <- basename(url)
download(url, destfile=filename)
babies <- read.table("babies.txt", header=TRUE)
bwt.nonsmoke <- filter(babies, smoke==0) %>% select(bwt) %>% unlist
bwt.smoke <- filter(babies, smoke==1) %>% select(bwt) %>% unlist
mean(bwt.nonsmoke)-mean(bwt.smoke)
popsd(bwt.nonsmoke)
popsd(bwt.smoke)
rejections <- replicate(10000, t.test(sample(bwt.nonsmoke, 5), sample(bwt.smoke, 5)))
t.test(sample(bwt.nonsmoke, 5), sample(bwt.smoke, 5)
)
t.test(sample(bwt.nonsmoke, 5), sample(bwt.smoke, 5))[3]
t.test(sample(bwt.nonsmoke, 5), sample(bwt.smoke, 5))[3] > 0.05
t.test(sample(bwt.nonsmoke, 5), sample(bwt.smoke, 5))[3] > 0.05
rejections <- replicate(10000, t.test(sample(bwt.nonsmoke, 5), sample(bwt.smoke, 5))[3] < 0.05)
mean(rejections)
set.seed(1)
rejections <- replicate(10000, t.test(sample(bwt.nonsmoke, 5), sample(bwt.smoke, 5))[3] < 0.05)
mean(rejections)
[30:120:30]
(30:120:30)
eq(30, 120, by = 30)
seq(30, 120, by = 30)
for (n in seq(30, 120, by = 30)) {
rejections <- replicate(10000, t.test(sample(bwt.nonsmoke, n), sample(bwt.smoke, n))[3] < 0.05)
print(n, mean(rejections))
}
for (n in seq(30, 120, by = 30)) {
rejections <- replicate(10000, t.test(sample(bwt.nonsmoke, n), sample(bwt.smoke, n))[3] < 0.05)
print(mean(rejections))
}
for (n in seq(30, 120, by = 30)) {
rejections <- replicate(10000, t.test(sample(bwt.nonsmoke, n), sample(bwt.smoke, n))[3] < 0.01)
print(mean(rejections))
}
pop  <- rnorm(5000, mean = 24, sd = 3.5)
set.seed(1)
x <- rnorm(5, mean = 0, sd = 1)
X <- mean(x)
sd <- sd(x)
(sqrt(5)*X)/sd
set.seed(1)
mc1 <- function() {
x <- rnorm(5, mean = 0, sd = 1)
X <- mean(x)
sd <- sd(x)
t <- (sqrt(5)*X)/sd
return(t)
}
mc1_t <- replicate(1000, mc1)
mean(abs(mc1_t > 2))
mean(abs(mc1_t) > 2))
mean(abs(mc1_t) > 2)
mc1_t[2]
mc1_t <- replicate(1000, mc1())
mean(abs(mc1_t) > 2)
set.seed(1)
mc1 <- function() {
x <- rnorm(5, mean = 0, sd = 1)
X <- mean(x)
sd <- sd(x)
t <- (sqrt(5)*X)/sd
return(t)
}
mc1_t <- replicate(1000, mc1())
mean(abs(mc1_t) > 2)
set.seed(1)
mc1 <- function() {
x <- rnorm(5, mean = 0, sd = 1)
X <- mean(x)
sd <- sd(x)
t <- (sqrt(5)*X)/sd
return(t)
}
set.seed(1)
mc1 <- function(n) {
x <- rnorm(n, mean = 0, sd = 1)
X <- mean(x)
sd <- sd(x)
t <- (sqrt(5)*X)/sd
return(t)
}
mc1_t <- replicate(1000, mc1(5))
mean(abs(mc1_t) > 2)
mean(mc1_t > 2)
1-pt(2,df=4)
B=100; ps = seq(1/(B+1), 1-1/(B+1),len=B)
qt(ps,df=4)
qqplot(qt(ps,df=4))
qqplot(qt(ps,df=4), replicate(100, mc1(5)))
for (n in seq(5, 10, 30, 60, 100, 1000)) {
qqplot(qt(ps,df=4), replicate(100, mc1(n)))
}
for (n in c(5, 10, 30, 60, 100, 1000)) {
qqplot(qt(ps,df=4), replicate(100, mc1(n)))
}
for (n in c(5, 10, 30, 60, 100, 1000)) {
qqplot(qt(ps,df=4), replicate(100, mc1(n)))
}
qqplot(qt(ps,df=4), replicate(100, mc1(5)))
qqplot(qt(ps,df=4), replicate(100, mc1(10)))
qqplot(qt(ps,df=4), replicate(100, mc1(30)))
qqplot(qt(ps,df=4), replicate(100, mc1(100)))
qqplot(qt(ps,df=4), replicate(100, mc1(1000)))
qqplot(qt(ps,df=4), replicate(100, mc1(100)))
qqplot(qt(ps,df=4), replicate(100, mc1(5)))
qqplot(qt(ps,df=4), replicate(100, mc1(10)))
qqplot(qt(ps,df=4), replicate(100, mc1(30)))
qqplot(qt(ps,df=4), replicate(100, mc1(100)))
qqplot(qt(ps,df=4), replicate(100, mc1(1000)))
qqplot(qt(ps,df=4), replicate(100, mc1(5)))
qqplot(qt(ps,df=4), replicate(100, mc1(100)))
qqplot(qt(ps,df=4), replicate(100, mc1(10000)))
qqplot(qt(ps,df=4), replicate(100, mc1(100)))
qqplot(qt(ps,df=4), replicate(100, mc1(10)))
qqplot(qt(ps,df=4), replicate(100, mc1(30)))
qqplot(qt(ps,df=4), replicate(100, mc1(5)))
qqplot(qt(ps,df=4), replicate(100, mc1(5)))
qqplot(qt(ps,df=4), replicate(100, mc1(5)))
qqplot(qt(ps,df=4), replicate(100, mc1(5)))
qqplot(qt(ps,df=4), replicate(100, mc1(5)))
qqplot(qt(ps,df=4), replicate(100, mc1(5)))
qqplot(qt(ps,df=4), replicate(100, mc1(5)))
qqplot(qt(ps,df=4), replicate(100, mc1(5)))
qqplot(qt(ps,df=4), replicate(100, mc1(5)))
qqplot(qt(ps,df=4), replicate(100, mc1(5)))
qqplot(qt(ps,df=4), replicate(100, mc1(5)))
qqplot(qt(ps,df=4), replicate(100, mc1(5)))
qqplot(qt(ps,df=4), replicate(100, mc1(5)))
qqplot(qt(ps,df=4), replicate(100, mc1(5)))
qqplot(qt(ps,df=4), replicate(100, mc1(5)))
qqplot(qt(ps,df=4), replicate(100, mc1(30)))
qqplot(qt(ps,df=4), replicate(100, mc1(30)))
qqplot(qt(ps,df=4), replicate(100, mc1(30)))
qqplot(qt(ps,df=4), replicate(100, mc1(30)))
qqplot(qt(ps,df=4), replicate(100, mc1(30)))
qqplot(qt(ps,df=4), replicate(100, mc1(30)))
qqplot(qt(ps,df=4), replicate(100, mc1(30)))
qqplot(qt(ps,df=4), replicate(100, mc1(30)))
qqplot(qt(ps,df=4), replicate(100, mc1(30)))
qqplot(qt(ps,df=4), replicate(100, mc1(30)))
qqplot(qt(ps,df=4), replicate(100, mc1(30)))
qqplot(qt(ps,df=4), replicate(100, mc1(30)))
qqplot(qt(ps,df=4), replicate(100, mc1(30)))
qqplot(qt(ps,df=4), replicate(100, mc1(100)))
qqplot(qt(ps,df=4), replicate(100, mc1(100)))
qqplot(qt(ps,df=4), replicate(100, mc1(100)))
qqplot(qt(ps,df=4), replicate(100, mc1(100)))
qqplot(qt(ps,df=4), replicate(100, mc1(100)))
qqplot(qt(ps,df=4), replicate(100, mc1(100)))
qqplot(qt(ps,df=4), replicate(100, mc1(100)))
qqplot(qt(ps,df=4), replicate(100, mc1(100)))
qqplot(qt(ps,df=4), replicate(100, mc1(100)))
qqplot(qt(ps,df=4), replicate(100, mc1(100)))
qqplot(qt(ps,df=4), replicate(100, mc1(100)))
qqplot(qt(ps,df=4), replicate(100, mc1(100)))
qqplot(qt(ps,df=4), replicate(100, mc1(100)))
qqplot(qt(ps,df=4), replicate(100, mc1(100)))
qqplot(qt(ps,df=4), replicate(100, mc1(100)))
qqplot(qt(ps,df=4), replicate(100, mc1(100)))
qqplot(qt(ps,df=4), replicate(100, mc1(1000)))
qqplot(qt(ps,df=4), replicate(100, mc1(1000)))
qqplot(qt(ps,df=4), replicate(100, mc1(1000)))
qqplot(qt(ps,df=4), replicate(100, mc1(1000)))
qqplot(qt(ps,df=4), replicate(100, mc1(1000)))
qqplot(qt(ps,df=4), replicate(100, mc1(1000)))
qqplot(qt(ps,df=4), replicate(100, mc1(1000)))
qqplot(qt(ps,df=4), replicate(100, mc1(1000)))
qqplot(qt(ps,df=4), replicate(100, mc1(1000)))
qqplot(qt(ps,df=4), replicate(100, mc1(1000)))
qqplot(qt(ps,df=4), replicate(100, mc1(1000)))
set.seed(1)
tscores <- replicate(1000, t.test(rnorm(100), rnorm(100), var.equal = TRUE)$stat)
B=1000; ps = seq(1/(B+1), 1-1/(B+1),len=B)
N = 10
tscores <- replicate(1000, t.test(rnorm(N), rnorm(N), var.equal = TRUE)$stat)
qqplot(qt(ps,df=2*N-2), tscores)
B=1000; ps = seq(1/(B+1), 1-1/(B+1),len=B)
N = 30
tscores <- replicate(1000, t.test(rnorm(N), rnorm(N), var.equal = TRUE)$stat)
qqplot(qt(ps,df=2*N-2), tscores)
B=1000; ps = seq(1/(B+1), 1-1/(B+1),len=B)
N = 100
tscores <- replicate(1000, t.test(rnorm(N), rnorm(N), var.equal = TRUE)$stat)
qqplot(qt(ps,df=2*N-2), tscores)
X =sample(c(-1,1), 15, replace=TRUE)
tstat <- sqrt(15)*mean(X) / sd(X)
X
tstat
qt(0.5, 14)
qt(ps, 14)
qt(X, 14)
qt(df=14)
qt(0.5, df=14)
set.seed(1)
N <- 15
B <- 10000
tstats <- replicate(B,{
X <- sample(c(-1,1), N, replace=TRUE)
sqrt(N)*mean(X)/sd(X)
})
ps=seq(1/(B+1), 1-1/(B+1), len=B)
qqplot(qt(ps,N-1), tstats, xlim=range(tstats))
abline(0,1)
set.seed(1)
N <- 1000
B <- 10000
tstats <- replicate(B,{
X <- sample(c(-1,1), N, replace=TRUE)
sqrt(N)*mean(X)/sd(X)
})
ps=seq(1/(B+1), 1-1/(B+1), len=B)
qqplot(qt(ps,N-1), tstats, xlim=range(tstats))
abline(0,1)
rnorm(1000, 0, 1/sqrt(1000))
median(rnorm(1000, 0, 1/sqrt(1000)))
replicate(1000, abs(median(rnorm(1000, 0, 1/sqrt(1000)))) < 0.001)
sum(replicate(1000, abs(median(rnorm(1000, 0, 1/sqrt(1000)))) < 0.001))
mean(replicate(1000, abs(median(rnorm(1000, 0, 1/sqrt(1000)))) < 0.001))
mean(replicate(1000, abs(median(rnorm(1000, 0, 1/sqrt(1000)))) < 0.0001))
mean(replicate(1000, abs(median(rnorm(1000, 0, 1/sqrt(1000)))) > 0.0001))
mean(replicate(1000, abs(median(rnorm(1000, 0, 1/sqrt(1000)))) > 0.001))
mean(replicate(1000, abs(median(rnorm(1000, 0, 1/sqrt(1000)))) > 0.01))
mean(replicate(1000, abs(median(rnorm(1000, 0, 1/sqrt(1000)))) > 0.001))
mean(replicate(1000, abs(median(rnorm(1000, 0, 1))) > 0.001))
mean(replicate(1000, abs(median(rnorm(1000, 0, 1/sqrt(1000)))) > 0.001))
medians <- replicate(10000, median ( rnorm(N) )
)
mean(replicate(10000, median ( rnorm(N))) > 0.001)
mean(replicate(10000, median ( rnorm(N))) > 0.001)
mean(replicate(1000, abs(median(rnorm(1000)) > 0.001))
)
url <- "https://raw.githubusercontent.com/genomicsclass/dagdata/master/inst/extdata/babies.txt"
filename <- basename(url)
download(url, destfile=filename)
babies <- read.table("babies.txt", header=TRUE)
bwt.nonsmoke <- filter(babies, smoke==0) %>% select(bwt) %>% unlist
bwt.smoke <- filter(babies, smoke==1) %>% select(bwt) %>% unlist
N=10
set.seed(1)
nonsmokers <- sample(bwt.nonsmoke , N)
smokers <- sample(bwt.smoke , N)
## get a mean difference
obs <- mean(smokers) - mean(nonsmokers)
dat <- c(smokers,nonsmokers)
shuffle <- sample( dat )
dat <- c(smokers,nonsmokers)
shuffle <- sample( dat )
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
mean(smokersstar)-mean(nonsmokersstar)
dat <- c(smokers,nonsmokers)
set.seed(1)
shuffle <- function(dat) {
shuffle <- sample( dat )
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
mean(smokersstar)-mean(nonsmokersstar)
}
null <- replicate(1000, shuffle(dat))
mean(obs > abs(null))
(obs > abs(null))
abs(null)
N=10
set.seed(1)
nonsmokers <- sample(bwt.nonsmoke , N)
smokers <- sample(bwt.smoke , N)
## get a mean difference
obs <- mean(smokers) - mean(nonsmokers)
set.seed(1)
shuffle <- function(dat) {
shuffle <- sample( dat )
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
mean(smokersstar)-mean(nonsmokersstar)
}
null <- replicate(1000, shuffle(dat))
(ans(obs) > abs(null))
(abs(obs) > abs(null))
mean(abs(obs) > abs(null))
1 - mean(abs(obs) > abs(null))
obs_med <- median(smokers) - median(nonsmokers)
null <- replicate(1000, shuffle(median))
shuffle <- function(measure) {
shuffle <- sample( dat )
smokersstar <- shuffle[1:N]
nonsmokersstar <- shuffle[(N+1):(2*N)]
measure(smokersstar)-measure(nonsmokersstar)
}
null <- replicate(1000, shuffle(mean))
1 - mean(abs(obs) > abs(null))
set.seed(1)
null <- replicate(1000, shuffle(median))
1 - mean(abs(obs) > abs(null))
set.seed(1)
nonsmokers <- sample(bwt.nonsmoke , N)
smokers <- sample(bwt.smoke , N)
obs_med <- median(smokers) - median(nonsmokers)
1 - mean(abs(obs_med) > abs(null))
d = read.csv("assoctest.csv")
pwd()
getwd()
setwd("/Users/aaronwflee/Documents/biostats_courses/1_data_analysis/")
d = read.csv("assoctest.csv")
setwd("/Users/aaronwflee/Documents/biostats_courses/1_data_analysis/")
table(d)
chisq.test(d)
chisq.test(table(d))
fisher.test(table(d))
table(d)
